The Iterative Self-Organizing Data Analysis Technique (ISODATA) method is a modification of the k-means clustering algorithm (overcomes the disadvantages of k-means), and is very effective for unsupervised classification of multi-spectral images. 

In each iteration, I recalculate means and reclassifies pixels with respect to the new means. Iterative cluster splitting and merging are done based on input threshold parameters. Clusters are merged if either the number of members (pixels) in a cluster is less than a certain threshold or if the centers of two clusters are closer than a certain threshold. Clusters are split into two different clusters if the cluster standard deviation exceeds a predefined value and the number of members (pixels) is twice the threshold for the minimum number of members. 

The iteration continues until the number of pixels in each class changes by less than the selected pixel change threshold or the maximum number of iterations is reached. Many of the steps used in the algorithm are based on the experience obtained through experimentation. 

Parameter Description
Data Type		Parameters	Default Value	Description
vector<BYTE *>		m_data				Input data
int			*m_ClassLabel			The label of cluster after classification
int			m_n				The dimension of data(number of bands)
long			m_N				The number of members(pixels) in a cluster
int			m_cN		100		The minimum number of members(pixels) to form a cluster
double			m_cS		10		The threshold of standard deviation of a cluster
double			m_cC		100		The threshold of distance between cluster centers
int			m_L		2		The maximum pairs of clusters that are allowed to be merged in each iteration
long			m_I		20		The maximum number of iterations
double			m_M				The coefficient for splitting
int			m_K		5		The required number of clusters
vector<vector<double>>	m_z				Cluster Center vector
vector<double>		m_de				The vector of the average distance between all members(pixels) in a cluster and the cluster center
double			m_dm				The average distance between all members(pixels) in a cluster and the cluster center
vector<vector<double>>	m_s				The standard deviation vector of each cluster center
vector<long>		m_Ne				The number of members(pixels) in each cluster
int			m_initC		1		The initial number of clusters

